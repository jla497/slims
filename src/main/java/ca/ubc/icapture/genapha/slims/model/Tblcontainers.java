package ca.ubc.icapture.genapha.slims.model;
// Generated May 30, 2017 4:12:31 PM by Hibernate Tools 3.2.2.GA


import ca.ubc.icapture.genapha.slims.config.PreventAnyUdate;
import ca.ubc.icapture.genapha.slims.serializers.CustomTblcontentSrlzer;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Tblcontainers generated by hbm2java
 */
@Entity
@EntityListeners(PreventAnyUdate.class)
@Table(name="TBLCONTAINERS"
    ,schema="ALLERGEN"
    , uniqueConstraints = @UniqueConstraint(columnNames="CONTAINERNAME") 
)
public class Tblcontainers  implements java.io.Serializable {


     private int containerid;
     @JsonIgnore
     private Tblsimsusers tblsimsusersByModifiedBy;
     @JsonIgnore
     private Tblshippedto tblshippedto;
     @JsonIgnore
     private Tblsimsusers tblsimsusersByCreatedBy;
     @JsonIgnoreProperties("tblcontainerses")
     private Tblfreezers tblfreezers;
     @JsonIgnoreProperties("tblcontainerses")
     private Tblcontainertypes tblcontainertypes;
     private String containername;
     private Integer shelf;
     private short discarded;
     private short shippedout;
     private Date shippeddate;
     private String comments;
     private Short stock;
     private int materialtypeid;
     private Date created;
     private Date modified;
     private int valid;
     private String containeralias;
     private Date date;
     private String initials;
     private int lot;
     private String location;
     private String barcode;
     private String checkedout;
     @JsonSerialize(using = CustomTblcontentSrlzer.class)
     private Set<Tblcontainercontents> tblcontainercontentses = new HashSet<Tblcontainercontents>(0);
     @JsonIgnore
     private Set<Tblgenotypingruns> tblgenotypingrunses = new HashSet<Tblgenotypingruns>(0);
     @JsonIgnore
     private Set<Tblcontrolwells> tblcontrolwellses = new HashSet<Tblcontrolwells>(0);

    public Tblcontainers() {
    }

	
    public Tblcontainers(int containerid, Tblsimsusers tblsimsusersByCreatedBy, Tblcontainertypes tblcontainertypes, String containername, short discarded, short shippedout, int materialtypeid, Date created, int valid, int lot) {
        this.containerid = containerid;
        this.tblsimsusersByCreatedBy = tblsimsusersByCreatedBy;
        this.tblcontainertypes = tblcontainertypes;
        this.containername = containername;
        this.discarded = discarded;
        this.shippedout = shippedout;
        this.materialtypeid = materialtypeid;
        this.created = created;
        this.valid = valid;
        this.lot = lot;
    }
    public Tblcontainers(int containerid, Tblsimsusers tblsimsusersByModifiedBy, Tblshippedto tblshippedto, Tblsimsusers tblsimsusersByCreatedBy, Tblfreezers tblfreezers, Tblcontainertypes tblcontainertypes, String containername, Integer shelf, short discarded, short shippedout, Date shippeddate, String comments, Short stock, int materialtypeid, Date created, Date modified, int valid, String containeralias, Date date, String initials, int lot, String location, String barcode, String checkedout, Set<Tblcontainercontents> tblcontainercontentses, Set<Tblgenotypingruns> tblgenotypingrunses, Set<Tblcontrolwells> tblcontrolwellses) {
       this.containerid = containerid;
       this.tblsimsusersByModifiedBy = tblsimsusersByModifiedBy;
       this.tblshippedto = tblshippedto;
       this.tblsimsusersByCreatedBy = tblsimsusersByCreatedBy;
       this.tblfreezers = tblfreezers;
       this.tblcontainertypes = tblcontainertypes;
       this.containername = containername;
       this.shelf = shelf;
       this.discarded = discarded;
       this.shippedout = shippedout;
       this.shippeddate = shippeddate;
       this.comments = comments;
       this.stock = stock;
       this.materialtypeid = materialtypeid;
       this.created = created;
       this.modified = modified;
       this.valid = valid;
       this.containeralias = containeralias;
       this.date = date;
       this.initials = initials;
       this.lot = lot;
       this.location = location;
       this.barcode = barcode;
       this.checkedout = checkedout;
       this.tblcontainercontentses = tblcontainercontentses;
       this.tblgenotypingrunses = tblgenotypingrunses;
       this.tblcontrolwellses = tblcontrolwellses;
    }
   
     @Id 
    
    @Column(name="CONTAINERID", unique=true, nullable=false)
    public int getContainerid() {
        return this.containerid;
    }
    
    public void setContainerid(int containerid) {
        this.containerid = containerid;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="MODIFIED_BY")
    public Tblsimsusers getTblsimsusersByModifiedBy() {
        return this.tblsimsusersByModifiedBy;
    }
    
    public void setTblsimsusersByModifiedBy(Tblsimsusers tblsimsusersByModifiedBy) {
        this.tblsimsusersByModifiedBy = tblsimsusersByModifiedBy;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="SHIPPEDTOID")
    public Tblshippedto getTblshippedto() {
        return this.tblshippedto;
    }
    
    public void setTblshippedto(Tblshippedto tblshippedto) {
        this.tblshippedto = tblshippedto;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CREATED_BY", nullable=false)
    public Tblsimsusers getTblsimsusersByCreatedBy() {
        return this.tblsimsusersByCreatedBy;
    }
    
    public void setTblsimsusersByCreatedBy(Tblsimsusers tblsimsusersByCreatedBy) {
        this.tblsimsusersByCreatedBy = tblsimsusersByCreatedBy;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="FREEZERID")
    public Tblfreezers getTblfreezers() {
        return this.tblfreezers;
    }
    
    public void setTblfreezers(Tblfreezers tblfreezers) {
        this.tblfreezers = tblfreezers;
    }
@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="CONTAINERTYPEID", nullable=false)
    public Tblcontainertypes getTblcontainertypes() {
        return this.tblcontainertypes;
    }
    
    public void setTblcontainertypes(Tblcontainertypes tblcontainertypes) {
        this.tblcontainertypes = tblcontainertypes;
    }
    
    @Column(name="CONTAINERNAME", unique=true, nullable=false, length=100)
    public String getContainername() {
        return this.containername;
    }
    
    public void setContainername(String containername) {
        this.containername = containername;
    }
    
    @Column(name="SHELF")
    public Integer getShelf() {
        return this.shelf;
    }
    
    public void setShelf(Integer shelf) {
        this.shelf = shelf;
    }
    
    @Column(name="DISCARDED", nullable=false)
    public short getDiscarded() {
        return this.discarded;
    }
    
    public void setDiscarded(short discarded) {
        this.discarded = discarded;
    }
    
    @Column(name="SHIPPEDOUT", nullable=false)
    public short getShippedout() {
        return this.shippedout;
    }
    
    public void setShippedout(short shippedout) {
        this.shippedout = shippedout;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="SHIPPEDDATE", length=10)
    public Date getShippeddate() {
        return this.shippeddate;
    }
    
    public void setShippeddate(Date shippeddate) {
        this.shippeddate = shippeddate;
    }
    
    @Column(name="COMMENTS", length=200)
    public String getComments() {
        return this.comments;
    }
    
    public void setComments(String comments) {
        this.comments = comments;
    }
    
    @Column(name="STOCK")
    public Short getStock() {
        return this.stock;
    }
    
    public void setStock(Short stock) {
        this.stock = stock;
    }
    
    @Column(name="MATERIALTYPEID", nullable=false)
    public int getMaterialtypeid() {
        return this.materialtypeid;
    }
    
    public void setMaterialtypeid(int materialtypeid) {
        this.materialtypeid = materialtypeid;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED", nullable=false, length=26)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="MODIFIED", length=26)
    public Date getModified() {
        return this.modified;
    }
    
    public void setModified(Date modified) {
        this.modified = modified;
    }
    
    @Column(name="VALID", nullable=false)
    public int getValid() {
        return this.valid;
    }
    
    public void setValid(int valid) {
        this.valid = valid;
    }
    
    @Column(name="CONTAINERALIAS", length=100)
    public String getContaineralias() {
        return this.containeralias;
    }
    
    public void setContaineralias(String containeralias) {
        this.containeralias = containeralias;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="DATE", length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }
    
    @Column(name="INITIALS", length=30)
    public String getInitials() {
        return this.initials;
    }
    
    public void setInitials(String initials) {
        this.initials = initials;
    }
    
    @Column(name="LOT", nullable=false)
    public int getLot() {
        return this.lot;
    }
    
    public void setLot(int lot) {
        this.lot = lot;
    }
    
    @Column(name="LOCATION", length=20)
    public String getLocation() {
        return this.location;
    }
    
    public void setLocation(String location) {
        this.location = location;
    }
    
    @Column(name="BARCODE", length=20)
    public String getBarcode() {
        return this.barcode;
    }
    
    public void setBarcode(String barcode) {
        this.barcode = barcode;
    }
    
    @Column(name="CHECKEDOUT", length=200)
    public String getCheckedout() {
        return this.checkedout;
    }
    
    public void setCheckedout(String checkedout) {
        this.checkedout = checkedout;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.EAGER, mappedBy="tblcontainers")
    public Set<Tblcontainercontents> getTblcontainercontentses() {
        return this.tblcontainercontentses;
    }
    
    public void setTblcontainercontentses(Set<Tblcontainercontents> tblcontainercontentses) {
        this.tblcontainercontentses = tblcontainercontentses;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcontainerses")
    public Set<Tblgenotypingruns> getTblgenotypingrunses() {
        return this.tblgenotypingrunses;
    }
    
    public void setTblgenotypingrunses(Set<Tblgenotypingruns> tblgenotypingrunses) {
        this.tblgenotypingrunses = tblgenotypingrunses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcontainers")
    public Set<Tblcontrolwells> getTblcontrolwellses() {
        return this.tblcontrolwellses;
    }
    
    public void setTblcontrolwellses(Set<Tblcontrolwells> tblcontrolwellses) {
        this.tblcontrolwellses = tblcontrolwellses;
    }




}


