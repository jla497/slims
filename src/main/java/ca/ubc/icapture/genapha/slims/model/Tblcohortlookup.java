package ca.ubc.icapture.genapha.slims.model;
// Generated May 30, 2017 4:12:31 PM by Hibernate Tools 3.2.2.GA


import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import ca.ubc.icapture.genapha.slims.config.PreventAnyUdate;
import com.fasterxml.jackson.annotation.JsonBackReference;
/**
 * Tblcohortlookup generated by hbm2java
 */
@Entity
@EntityListeners(PreventAnyUdate.class)
@Table(name="TBLCOHORTLOOKUP"
    ,schema="ALLERGEN"
    , uniqueConstraints = {@UniqueConstraint(columnNames={"COHORTID", "NAME"}), @UniqueConstraint(columnNames="NAME")} 
)
public class Tblcohortlookup  implements java.io.Serializable {


     private int cohortid;
     private String name;
     private int sortorder;
     @JsonIgnore
     private Set<Tblcohortpopulations> tblcohortpopulationses = new HashSet<Tblcohortpopulations>(0);
     @JsonIgnore
     private Set<Tblphenotyperange> tblphenotyperanges = new HashSet<Tblphenotyperange>(0);
     @JsonIgnore
     private Set<Tblfrequencies> tblfrequencieses = new HashSet<Tblfrequencies>(0);
     @JsonIgnore
     private Set<Tblsnpstatus> tblsnpstatuses = new HashSet<Tblsnpstatus>(0);
     @JsonIgnore
     private Set<Tblvalues> tblvalueses = new HashSet<Tblvalues>(0);
     @JsonIgnore
     private Set<Tblfamilyoverlap> tblfamilyoverlaps = new HashSet<Tblfamilyoverlap>(0);
     @JsonIgnore
     private Set<Tblsubject> tblsubjects = new HashSet<Tblsubject>(0);
     @JsonIgnore
     private Set<Tblmztwin> tblmztwins = new HashSet<Tblmztwin>(0);
     @JsonIgnore
     private Set<Tblethnicityfrequency> tblethnicityfrequencies = new HashSet<Tblethnicityfrequency>(0);
     @JsonIgnore
     private Set<Tblstatus> tblstatuses = new HashSet<Tblstatus>(0);

    public Tblcohortlookup() {
    }

	
    public Tblcohortlookup(int cohortid, String name, int sortorder) {
        this.cohortid = cohortid;
        this.name = name;
        this.sortorder = sortorder;
    }
    public Tblcohortlookup(int cohortid, String name, int sortorder, Set<Tblcohortpopulations> tblcohortpopulationses, Set<Tblphenotyperange> tblphenotyperanges, Set<Tblfrequencies> tblfrequencieses, Set<Tblsnpstatus> tblsnpstatuses, Set<Tblvalues> tblvalueses, Set<Tblfamilyoverlap> tblfamilyoverlaps, Set<Tblsubject> tblsubjects, Set<Tblmztwin> tblmztwins, Set<Tblethnicityfrequency> tblethnicityfrequencies, Set<Tblstatus> tblstatuses) {
       this.cohortid = cohortid;
       this.name = name;
       this.sortorder = sortorder;
       this.tblcohortpopulationses = tblcohortpopulationses;
       this.tblphenotyperanges = tblphenotyperanges;
       this.tblfrequencieses = tblfrequencieses;
       this.tblsnpstatuses = tblsnpstatuses;
       this.tblvalueses = tblvalueses;
       this.tblfamilyoverlaps = tblfamilyoverlaps;
       this.tblsubjects = tblsubjects;
       this.tblmztwins = tblmztwins;
       this.tblethnicityfrequencies = tblethnicityfrequencies;
       this.tblstatuses = tblstatuses;
    }
   
     @Id 
    
    @Column(name="COHORTID", unique=true, nullable=false)
    public int getCohortid() {
        return this.cohortid;
    }
    
    public void setCohortid(int cohortid) {
        this.cohortid = cohortid;
    }
    
    @Column(name="NAME", unique=true, nullable=false, length=25)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="SORTORDER", nullable=false)
    public int getSortorder() {
        return this.sortorder;
    }
    
    public void setSortorder(int sortorder) {
        this.sortorder = sortorder;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblcohortpopulations> getTblcohortpopulationses() {
        return this.tblcohortpopulationses;
    }
    
    public void setTblcohortpopulationses(Set<Tblcohortpopulations> tblcohortpopulationses) {
        this.tblcohortpopulationses = tblcohortpopulationses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblphenotyperange> getTblphenotyperanges() {
        return this.tblphenotyperanges;
    }
    
    public void setTblphenotyperanges(Set<Tblphenotyperange> tblphenotyperanges) {
        this.tblphenotyperanges = tblphenotyperanges;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblfrequencies> getTblfrequencieses() {
        return this.tblfrequencieses;
    }
    
    public void setTblfrequencieses(Set<Tblfrequencies> tblfrequencieses) {
        this.tblfrequencieses = tblfrequencieses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblsnpstatus> getTblsnpstatuses() {
        return this.tblsnpstatuses;
    }
    
    public void setTblsnpstatuses(Set<Tblsnpstatus> tblsnpstatuses) {
        this.tblsnpstatuses = tblsnpstatuses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblvalues> getTblvalueses() {
        return this.tblvalueses;
    }
    
    public void setTblvalueses(Set<Tblvalues> tblvalueses) {
        this.tblvalueses = tblvalueses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblfamilyoverlap> getTblfamilyoverlaps() {
        return this.tblfamilyoverlaps;
    }
    
    public void setTblfamilyoverlaps(Set<Tblfamilyoverlap> tblfamilyoverlaps) {
        this.tblfamilyoverlaps = tblfamilyoverlaps;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblsubject> getTblsubjects() {
        return this.tblsubjects;
    }
    
    public void setTblsubjects(Set<Tblsubject> tblsubjects) {
        this.tblsubjects = tblsubjects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblmztwin> getTblmztwins() {
        return this.tblmztwins;
    }
    
    public void setTblmztwins(Set<Tblmztwin> tblmztwins) {
        this.tblmztwins = tblmztwins;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblethnicityfrequency> getTblethnicityfrequencies() {
        return this.tblethnicityfrequencies;
    }
    
    public void setTblethnicityfrequencies(Set<Tblethnicityfrequency> tblethnicityfrequencies) {
        this.tblethnicityfrequencies = tblethnicityfrequencies;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblcohortlookup")
    public Set<Tblstatus> getTblstatuses() {
        return this.tblstatuses;
    }
    
    public void setTblstatuses(Set<Tblstatus> tblstatuses) {
        this.tblstatuses = tblstatuses;
    }




}


