package ca.ubc.icapture.genapha.slims.model;
// Generated May 30, 2017 4:12:31 PM by Hibernate Tools 3.2.2.GA


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Tblgenotypingruns generated by hbm2java
 */
@Entity
@Table(name="TBLGENOTYPINGRUNS"
    ,schema="ALLERGEN"
    , uniqueConstraints = @UniqueConstraint(columnNames={"DESCRIPTION", "DATE"}) 
)
public class Tblgenotypingruns  implements java.io.Serializable {


     private int genotypingrunid;
     private String description;
     private Date date;
     private Set<Tblgenotypingrunsnpstatus> tblgenotypingrunsnpstatuses = new HashSet<Tblgenotypingrunsnpstatus>(0);
     private Set<Tblcontainers> tblcontainerses = new HashSet<Tblcontainers>(0);
     private Set<Tblgenotypingrunsamplestatus> tblgenotypingrunsamplestatuses = new HashSet<Tblgenotypingrunsamplestatus>(0);
     private Set<Tblgenotypes> tblgenotypeses = new HashSet<Tblgenotypes>(0);
     private Set<Tblsampleqcstatus> tblsampleqcstatuses = new HashSet<Tblsampleqcstatus>(0);

    public Tblgenotypingruns() {
    }

	
    public Tblgenotypingruns(int genotypingrunid, String description, Date date) {
        this.genotypingrunid = genotypingrunid;
        this.description = description;
        this.date = date;
    }
    public Tblgenotypingruns(int genotypingrunid, String description, Date date, Set<Tblgenotypingrunsnpstatus> tblgenotypingrunsnpstatuses, Set<Tblcontainers> tblcontainerses, Set<Tblgenotypingrunsamplestatus> tblgenotypingrunsamplestatuses, Set<Tblgenotypes> tblgenotypeses, Set<Tblsampleqcstatus> tblsampleqcstatuses) {
       this.genotypingrunid = genotypingrunid;
       this.description = description;
       this.date = date;
       this.tblgenotypingrunsnpstatuses = tblgenotypingrunsnpstatuses;
       this.tblcontainerses = tblcontainerses;
       this.tblgenotypingrunsamplestatuses = tblgenotypingrunsamplestatuses;
       this.tblgenotypeses = tblgenotypeses;
       this.tblsampleqcstatuses = tblsampleqcstatuses;
    }
   
     @Id 
    
    @Column(name="GENOTYPINGRUNID", unique=true, nullable=false)
    public int getGenotypingrunid() {
        return this.genotypingrunid;
    }
    
    public void setGenotypingrunid(int genotypingrunid) {
        this.genotypingrunid = genotypingrunid;
    }
    
    @Column(name="DESCRIPTION", nullable=false, length=45)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="DATE", nullable=false, length=10)
    public Date getDate() {
        return this.date;
    }
    
    public void setDate(Date date) {
        this.date = date;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblgenotypingruns")
    public Set<Tblgenotypingrunsnpstatus> getTblgenotypingrunsnpstatuses() {
        return this.tblgenotypingrunsnpstatuses;
    }
    
    public void setTblgenotypingrunsnpstatuses(Set<Tblgenotypingrunsnpstatus> tblgenotypingrunsnpstatuses) {
        this.tblgenotypingrunsnpstatuses = tblgenotypingrunsnpstatuses;
    }
@ManyToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinTable(name="TBLGENOTYPINGRUNCONTAINERS", schema="ALLERGEN", joinColumns = { 
        @JoinColumn(name="GENOTYPINGRUNID", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="CONTAINERID", nullable=false, updatable=false) })
    public Set<Tblcontainers> getTblcontainerses() {
        return this.tblcontainerses;
    }
    
    public void setTblcontainerses(Set<Tblcontainers> tblcontainerses) {
        this.tblcontainerses = tblcontainerses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblgenotypingruns")
    public Set<Tblgenotypingrunsamplestatus> getTblgenotypingrunsamplestatuses() {
        return this.tblgenotypingrunsamplestatuses;
    }
    
    public void setTblgenotypingrunsamplestatuses(Set<Tblgenotypingrunsamplestatus> tblgenotypingrunsamplestatuses) {
        this.tblgenotypingrunsamplestatuses = tblgenotypingrunsamplestatuses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblgenotypingruns")
    public Set<Tblgenotypes> getTblgenotypeses() {
        return this.tblgenotypeses;
    }
    
    public void setTblgenotypeses(Set<Tblgenotypes> tblgenotypeses) {
        this.tblgenotypeses = tblgenotypeses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblgenotypingruns")
    public Set<Tblsampleqcstatus> getTblsampleqcstatuses() {
        return this.tblsampleqcstatuses;
    }
    
    public void setTblsampleqcstatuses(Set<Tblsampleqcstatus> tblsampleqcstatuses) {
        this.tblsampleqcstatuses = tblsampleqcstatuses;
    }




}


