package ca.ubc.icapture.genapha.slims.model;
// Generated May 30, 2017 4:12:31 PM by Hibernate Tools 3.2.2.GA


import java.sql.Clob;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * AdviseTableId generated by hbm2java
 */
@Embeddable
public class AdviseTableId  implements java.io.Serializable {


     private Date runId;
     private String tableName;
     private String tableSchema;
     private String tablespace;
     private String selectionFlag;
     private char tableExists;
     private char useTable;
     private Clob genColumns;
     private Clob organizeBy;
     private Clob creationText;
     private Clob alterCommand;
     private double diskuse;

    public AdviseTableId() {
    }

	
    public AdviseTableId(String tableName, String tableSchema, String tablespace, String selectionFlag, char tableExists, char useTable, Clob genColumns, Clob organizeBy, Clob creationText, Clob alterCommand, double diskuse) {
        this.tableName = tableName;
        this.tableSchema = tableSchema;
        this.tablespace = tablespace;
        this.selectionFlag = selectionFlag;
        this.tableExists = tableExists;
        this.useTable = useTable;
        this.genColumns = genColumns;
        this.organizeBy = organizeBy;
        this.creationText = creationText;
        this.alterCommand = alterCommand;
        this.diskuse = diskuse;
    }
    public AdviseTableId(Date runId, String tableName, String tableSchema, String tablespace, String selectionFlag, char tableExists, char useTable, Clob genColumns, Clob organizeBy, Clob creationText, Clob alterCommand, double diskuse) {
       this.runId = runId;
       this.tableName = tableName;
       this.tableSchema = tableSchema;
       this.tablespace = tablespace;
       this.selectionFlag = selectionFlag;
       this.tableExists = tableExists;
       this.useTable = useTable;
       this.genColumns = genColumns;
       this.organizeBy = organizeBy;
       this.creationText = creationText;
       this.alterCommand = alterCommand;
       this.diskuse = diskuse;
    }
   

    @Column(name="RUN_ID", length=26)
    public Date getRunId() {
        return this.runId;
    }
    
    public void setRunId(Date runId) {
        this.runId = runId;
    }

    @Column(name="TABLE_NAME", nullable=false, length=128)
    public String getTableName() {
        return this.tableName;
    }
    
    public void setTableName(String tableName) {
        this.tableName = tableName;
    }

    @Column(name="TABLE_SCHEMA", nullable=false, length=128)
    public String getTableSchema() {
        return this.tableSchema;
    }
    
    public void setTableSchema(String tableSchema) {
        this.tableSchema = tableSchema;
    }

    @Column(name="TABLESPACE", nullable=false, length=128)
    public String getTablespace() {
        return this.tablespace;
    }
    
    public void setTablespace(String tablespace) {
        this.tablespace = tablespace;
    }

    @Column(name="SELECTION_FLAG", nullable=false, length=8)
    public String getSelectionFlag() {
        return this.selectionFlag;
    }
    
    public void setSelectionFlag(String selectionFlag) {
        this.selectionFlag = selectionFlag;
    }

    @Column(name="TABLE_EXISTS", nullable=false, length=1)
    public char getTableExists() {
        return this.tableExists;
    }
    
    public void setTableExists(char tableExists) {
        this.tableExists = tableExists;
    }

    @Column(name="USE_TABLE", nullable=false, length=1)
    public char getUseTable() {
        return this.useTable;
    }
    
    public void setUseTable(char useTable) {
        this.useTable = useTable;
    }

    @Column(name="GEN_COLUMNS", nullable=false)
    public Clob getGenColumns() {
        return this.genColumns;
    }
    
    public void setGenColumns(Clob genColumns) {
        this.genColumns = genColumns;
    }

    @Column(name="ORGANIZE_BY", nullable=false)
    public Clob getOrganizeBy() {
        return this.organizeBy;
    }
    
    public void setOrganizeBy(Clob organizeBy) {
        this.organizeBy = organizeBy;
    }

    @Column(name="CREATION_TEXT", nullable=false)
    public Clob getCreationText() {
        return this.creationText;
    }
    
    public void setCreationText(Clob creationText) {
        this.creationText = creationText;
    }

    @Column(name="ALTER_COMMAND", nullable=false)
    public Clob getAlterCommand() {
        return this.alterCommand;
    }
    
    public void setAlterCommand(Clob alterCommand) {
        this.alterCommand = alterCommand;
    }

    @Column(name="DISKUSE", nullable=false, precision=53, scale=0)
    public double getDiskuse() {
        return this.diskuse;
    }
    
    public void setDiskuse(double diskuse) {
        this.diskuse = diskuse;
    }


   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof AdviseTableId) ) return false;
		 AdviseTableId castOther = ( AdviseTableId ) other; 
         
		 return ( (this.getRunId()==castOther.getRunId()) || ( this.getRunId()!=null && castOther.getRunId()!=null && this.getRunId().equals(castOther.getRunId()) ) )
 && ( (this.getTableName()==castOther.getTableName()) || ( this.getTableName()!=null && castOther.getTableName()!=null && this.getTableName().equals(castOther.getTableName()) ) )
 && ( (this.getTableSchema()==castOther.getTableSchema()) || ( this.getTableSchema()!=null && castOther.getTableSchema()!=null && this.getTableSchema().equals(castOther.getTableSchema()) ) )
 && ( (this.getTablespace()==castOther.getTablespace()) || ( this.getTablespace()!=null && castOther.getTablespace()!=null && this.getTablespace().equals(castOther.getTablespace()) ) )
 && ( (this.getSelectionFlag()==castOther.getSelectionFlag()) || ( this.getSelectionFlag()!=null && castOther.getSelectionFlag()!=null && this.getSelectionFlag().equals(castOther.getSelectionFlag()) ) )
 && (this.getTableExists()==castOther.getTableExists())
 && (this.getUseTable()==castOther.getUseTable())
 && ( (this.getGenColumns()==castOther.getGenColumns()) || ( this.getGenColumns()!=null && castOther.getGenColumns()!=null && this.getGenColumns().equals(castOther.getGenColumns()) ) )
 && ( (this.getOrganizeBy()==castOther.getOrganizeBy()) || ( this.getOrganizeBy()!=null && castOther.getOrganizeBy()!=null && this.getOrganizeBy().equals(castOther.getOrganizeBy()) ) )
 && ( (this.getCreationText()==castOther.getCreationText()) || ( this.getCreationText()!=null && castOther.getCreationText()!=null && this.getCreationText().equals(castOther.getCreationText()) ) )
 && ( (this.getAlterCommand()==castOther.getAlterCommand()) || ( this.getAlterCommand()!=null && castOther.getAlterCommand()!=null && this.getAlterCommand().equals(castOther.getAlterCommand()) ) )
 && (this.getDiskuse()==castOther.getDiskuse());
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getRunId() == null ? 0 : this.getRunId().hashCode() );
         result = 37 * result + ( getTableName() == null ? 0 : this.getTableName().hashCode() );
         result = 37 * result + ( getTableSchema() == null ? 0 : this.getTableSchema().hashCode() );
         result = 37 * result + ( getTablespace() == null ? 0 : this.getTablespace().hashCode() );
         result = 37 * result + ( getSelectionFlag() == null ? 0 : this.getSelectionFlag().hashCode() );
         result = 37 * result + this.getTableExists();
         result = 37 * result + this.getUseTable();
         result = 37 * result + ( getGenColumns() == null ? 0 : this.getGenColumns().hashCode() );
         result = 37 * result + ( getOrganizeBy() == null ? 0 : this.getOrganizeBy().hashCode() );
         result = 37 * result + ( getCreationText() == null ? 0 : this.getCreationText().hashCode() );
         result = 37 * result + ( getAlterCommand() == null ? 0 : this.getAlterCommand().hashCode() );
         result = 37 * result + (int) this.getDiskuse();
         return result;
   }   


}


