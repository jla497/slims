package ca.ubc.icapture.genapha.slims.model;
// Generated May 30, 2017 4:12:31 PM by Hibernate Tools 3.2.2.GA


import java.sql.Blob;
import java.sql.Clob;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ExplainStatement generated by hbm2java
 */
@Entity
@Table(name="EXPLAIN_STATEMENT"
    ,schema="ALLERGEN"
)
public class ExplainStatement  implements java.io.Serializable {


     private ExplainStatementId id;
     private ExplainInstance explainInstance;
     private int queryno;
     private String querytag;
     private String statementType;
     private char updatable;
     private char deletable;
     private double totalCost;
     private Clob statementText;
     private Blob snapshot;
     private int queryDegree;
     private Set<ExplainStream> explainStreams = new HashSet<ExplainStream>(0);
     private Set<ExplainArgument> explainArguments = new HashSet<ExplainArgument>(0);
     private Set<ExplainObject> explainObjects = new HashSet<ExplainObject>(0);
     private Set<ExplainOperator> explainOperators = new HashSet<ExplainOperator>(0);
     private Set<ExplainPredicate> explainPredicates = new HashSet<ExplainPredicate>(0);

    public ExplainStatement() {
    }

	
    public ExplainStatement(ExplainStatementId id, ExplainInstance explainInstance, int queryno, String querytag, String statementType, char updatable, char deletable, double totalCost, Clob statementText, int queryDegree) {
        this.id = id;
        this.explainInstance = explainInstance;
        this.queryno = queryno;
        this.querytag = querytag;
        this.statementType = statementType;
        this.updatable = updatable;
        this.deletable = deletable;
        this.totalCost = totalCost;
        this.statementText = statementText;
        this.queryDegree = queryDegree;
    }
    public ExplainStatement(ExplainStatementId id, ExplainInstance explainInstance, int queryno, String querytag, String statementType, char updatable, char deletable, double totalCost, Clob statementText, Blob snapshot, int queryDegree, Set<ExplainStream> explainStreams, Set<ExplainArgument> explainArguments, Set<ExplainObject> explainObjects, Set<ExplainOperator> explainOperators, Set<ExplainPredicate> explainPredicates) {
       this.id = id;
       this.explainInstance = explainInstance;
       this.queryno = queryno;
       this.querytag = querytag;
       this.statementType = statementType;
       this.updatable = updatable;
       this.deletable = deletable;
       this.totalCost = totalCost;
       this.statementText = statementText;
       this.snapshot = snapshot;
       this.queryDegree = queryDegree;
       this.explainStreams = explainStreams;
       this.explainArguments = explainArguments;
       this.explainObjects = explainObjects;
       this.explainOperators = explainOperators;
       this.explainPredicates = explainPredicates;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="explainRequester", column=@Column(name="EXPLAIN_REQUESTER", nullable=false, length=128) ), 
        @AttributeOverride(name="explainTime", column=@Column(name="EXPLAIN_TIME", nullable=false, length=26) ), 
        @AttributeOverride(name="sourceName", column=@Column(name="SOURCE_NAME", nullable=false, length=128) ), 
        @AttributeOverride(name="sourceSchema", column=@Column(name="SOURCE_SCHEMA", nullable=false, length=128) ), 
        @AttributeOverride(name="sourceVersion", column=@Column(name="SOURCE_VERSION", nullable=false, length=64) ), 
        @AttributeOverride(name="explainLevel", column=@Column(name="EXPLAIN_LEVEL", nullable=false, length=1) ), 
        @AttributeOverride(name="stmtno", column=@Column(name="STMTNO", nullable=false) ), 
        @AttributeOverride(name="sectno", column=@Column(name="SECTNO", nullable=false) ) } )
    public ExplainStatementId getId() {
        return this.id;
    }
    
    public void setId(ExplainStatementId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="EXPLAIN_REQUESTER", referencedColumnName="EXPLAIN_REQUESTER", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="EXPLAIN_TIME", referencedColumnName="EXPLAIN_TIME", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="SOURCE_NAME", referencedColumnName="SOURCE_NAME", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="SOURCE_SCHEMA", referencedColumnName="SOURCE_SCHEMA", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="SOURCE_VERSION", referencedColumnName="SOURCE_VERSION", nullable=false, insertable=false, updatable=false) } )
    public ExplainInstance getExplainInstance() {
        return this.explainInstance;
    }
    
    public void setExplainInstance(ExplainInstance explainInstance) {
        this.explainInstance = explainInstance;
    }
    
    @Column(name="QUERYNO", nullable=false)
    public int getQueryno() {
        return this.queryno;
    }
    
    public void setQueryno(int queryno) {
        this.queryno = queryno;
    }
    
    @Column(name="QUERYTAG", nullable=false, length=20)
    public String getQuerytag() {
        return this.querytag;
    }
    
    public void setQuerytag(String querytag) {
        this.querytag = querytag;
    }
    
    @Column(name="STATEMENT_TYPE", nullable=false, length=2)
    public String getStatementType() {
        return this.statementType;
    }
    
    public void setStatementType(String statementType) {
        this.statementType = statementType;
    }
    
    @Column(name="UPDATABLE", nullable=false, length=1)
    public char getUpdatable() {
        return this.updatable;
    }
    
    public void setUpdatable(char updatable) {
        this.updatable = updatable;
    }
    
    @Column(name="DELETABLE", nullable=false, length=1)
    public char getDeletable() {
        return this.deletable;
    }
    
    public void setDeletable(char deletable) {
        this.deletable = deletable;
    }
    
    @Column(name="TOTAL_COST", nullable=false, precision=53, scale=0)
    public double getTotalCost() {
        return this.totalCost;
    }
    
    public void setTotalCost(double totalCost) {
        this.totalCost = totalCost;
    }
    
    @Column(name="STATEMENT_TEXT", nullable=false)
    public Clob getStatementText() {
        return this.statementText;
    }
    
    public void setStatementText(Clob statementText) {
        this.statementText = statementText;
    }
    
    @Column(name="SNAPSHOT")
    public Blob getSnapshot() {
        return this.snapshot;
    }
    
    public void setSnapshot(Blob snapshot) {
        this.snapshot = snapshot;
    }
    
    @Column(name="QUERY_DEGREE", nullable=false)
    public int getQueryDegree() {
        return this.queryDegree;
    }
    
    public void setQueryDegree(int queryDegree) {
        this.queryDegree = queryDegree;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="explainStatement")
    public Set<ExplainStream> getExplainStreams() {
        return this.explainStreams;
    }
    
    public void setExplainStreams(Set<ExplainStream> explainStreams) {
        this.explainStreams = explainStreams;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="explainStatement")
    public Set<ExplainArgument> getExplainArguments() {
        return this.explainArguments;
    }
    
    public void setExplainArguments(Set<ExplainArgument> explainArguments) {
        this.explainArguments = explainArguments;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="explainStatement")
    public Set<ExplainObject> getExplainObjects() {
        return this.explainObjects;
    }
    
    public void setExplainObjects(Set<ExplainObject> explainObjects) {
        this.explainObjects = explainObjects;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="explainStatement")
    public Set<ExplainOperator> getExplainOperators() {
        return this.explainOperators;
    }
    
    public void setExplainOperators(Set<ExplainOperator> explainOperators) {
        this.explainOperators = explainOperators;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="explainStatement")
    public Set<ExplainPredicate> getExplainPredicates() {
        return this.explainPredicates;
    }
    
    public void setExplainPredicates(Set<ExplainPredicate> explainPredicates) {
        this.explainPredicates = explainPredicates;
    }




}


