package ca.ubc.icapture.genapha.slims.model;
// Generated May 31, 2017 11:51:43 AM by Hibernate Tools 3.2.2.GA


import ca.ubc.icapture.genapha.slims.config.PreventAnyUdate;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Tblethnicitylookup generated by hbm2java
 */
@Entity
@EntityListeners(PreventAnyUdate.class)
@Table(name="TBLETHNICITYLOOKUP"
    ,schema="ALLERGEN"
    , uniqueConstraints = @UniqueConstraint(columnNames="ETHNICITY") 
)
@JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
public class Tblethnicitylookup  implements java.io.Serializable {


     private long ethnicityid;
     private String ethnicity;
     @JsonIgnore
     private Set<Tblsubject> tblsubjectsForSelfRepEthid = new HashSet<Tblsubject>(0);
     @JsonIgnore
     private Set<Tblsubject> tblsubjectsForEthnicityid = new HashSet<Tblsubject>(0);
     @JsonIgnore
     private Set<Tblstatus> tblstatuses = new HashSet<Tblstatus>(0);
     @JsonIgnore
     private Set<Tblfrequencies> tblfrequencieses = new HashSet<Tblfrequencies>(0);
     @JsonIgnore
     private Set<Tblsubject> tblsubjectsForSelfRepAncEthid = new HashSet<Tblsubject>(0);
    @JsonIgnore
     private Set<Tblethnicityfrequency> tblethnicityfrequencies = new HashSet<Tblethnicityfrequency>(0);
     @JsonIgnore
     private Set<Tblsubject> tblsubjectsForGenEthid = new HashSet<Tblsubject>(0);

    public Tblethnicitylookup() {
    }

	
    public Tblethnicitylookup(long ethnicityid, String ethnicity) {
        this.ethnicityid = ethnicityid;
        this.ethnicity = ethnicity;
    }
    public Tblethnicitylookup(long ethnicityid, String ethnicity, Set<Tblsubject> tblsubjectsForSelfRepEthid, Set<Tblsubject> tblsubjectsForEthnicityid, Set<Tblstatus> tblstatuses, Set<Tblfrequencies> tblfrequencieses, Set<Tblsubject> tblsubjectsForSelfRepAncEthid, Set<Tblethnicityfrequency> tblethnicityfrequencies, Set<Tblsubject> tblsubjectsForGenEthid) {
       this.ethnicityid = ethnicityid;
       this.ethnicity = ethnicity;
       this.tblsubjectsForSelfRepEthid = tblsubjectsForSelfRepEthid;
       this.tblsubjectsForEthnicityid = tblsubjectsForEthnicityid;
       this.tblstatuses = tblstatuses;
       this.tblfrequencieses = tblfrequencieses;
       this.tblsubjectsForSelfRepAncEthid = tblsubjectsForSelfRepAncEthid;
       this.tblethnicityfrequencies = tblethnicityfrequencies;
       this.tblsubjectsForGenEthid = tblsubjectsForGenEthid;
    }
   
     @Id 
    
    @Column(name="ETHNICITYID", unique=true, nullable=false)
    public long getEthnicityid() {
        return this.ethnicityid;
    }
    
    public void setEthnicityid(long ethnicityid) {
        this.ethnicityid = ethnicityid;
    }
    
    @Column(name="ETHNICITY", unique=true, nullable=false, length=100)
    public String getEthnicity() {
        return this.ethnicity;
    }
    
    public void setEthnicity(String ethnicity) {
        this.ethnicity = ethnicity;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookupBySelfRepEthid")
    public Set<Tblsubject> getTblsubjectsForSelfRepEthid() {
        return this.tblsubjectsForSelfRepEthid;
    }
    
    public void setTblsubjectsForSelfRepEthid(Set<Tblsubject> tblsubjectsForSelfRepEthid) {
        this.tblsubjectsForSelfRepEthid = tblsubjectsForSelfRepEthid;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookupByEthnicityid")
    public Set<Tblsubject> getTblsubjectsForEthnicityid() {
        return this.tblsubjectsForEthnicityid;
    }
    
    public void setTblsubjectsForEthnicityid(Set<Tblsubject> tblsubjectsForEthnicityid) {
        this.tblsubjectsForEthnicityid = tblsubjectsForEthnicityid;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookup")
    public Set<Tblstatus> getTblstatuses() {
        return this.tblstatuses;
    }
    
    public void setTblstatuses(Set<Tblstatus> tblstatuses) {
        this.tblstatuses = tblstatuses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookup")
    public Set<Tblfrequencies> getTblfrequencieses() {
        return this.tblfrequencieses;
    }
    
    public void setTblfrequencieses(Set<Tblfrequencies> tblfrequencieses) {
        this.tblfrequencieses = tblfrequencieses;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookupBySelfRepAncEthid")
    public Set<Tblsubject> getTblsubjectsForSelfRepAncEthid() {
        return this.tblsubjectsForSelfRepAncEthid;
    }
    
    public void setTblsubjectsForSelfRepAncEthid(Set<Tblsubject> tblsubjectsForSelfRepAncEthid) {
        this.tblsubjectsForSelfRepAncEthid = tblsubjectsForSelfRepAncEthid;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookup")
    public Set<Tblethnicityfrequency> getTblethnicityfrequencies() {
        return this.tblethnicityfrequencies;
    }
    
    public void setTblethnicityfrequencies(Set<Tblethnicityfrequency> tblethnicityfrequencies) {
        this.tblethnicityfrequencies = tblethnicityfrequencies;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="tblethnicitylookupByGenEthid")
    public Set<Tblsubject> getTblsubjectsForGenEthid() {
        return this.tblsubjectsForGenEthid;
    }
    
    public void setTblsubjectsForGenEthid(Set<Tblsubject> tblsubjectsForGenEthid) {
        this.tblsubjectsForGenEthid = tblsubjectsForGenEthid;
    }




}


